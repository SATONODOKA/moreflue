'use client';

import { useState } from 'react';
import Link from 'next/link';

// „Çµ„É≥„Éó„É´„É°„ÉÉ„Çª„Éº„Ç∏„Éá„Éº„Çø
const sampleMessages = [
  {
    id: '1',
    storeName: '„Ç´„Éï„Çß„Éª„Éâ„Éª„Éë„É™',
    lastMessage: 'ÊäïÁ®øÂÜÖÂÆπ„Å´„Å§„ÅÑ„Å¶„ÅîÁõ∏Ë´á„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÂÜôÁúü„ÅÆÊíÆ„ÇäÊñπ„Å´„Å§„ÅÑ„Å¶Êïô„Åà„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
    timestamp: '10:30',
    unreadCount: 2,
    avatar: '„Ç´',
    isOnline: true,
  },
  {
    id: '2',
    storeName: '„Éò„Ç¢„Çµ„É≠„É≥ STYLE',
    lastMessage: 'Ê°à‰ª∂„ÅÆË©≥Á¥∞„ÇíÁ¢∫Ë™ç„Åï„Åõ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÊù•ÈÄ±„ÅÆÊíÆÂΩ±„Å´„Å§„ÅÑ„Å¶',
    timestamp: '09:15',
    unreadCount: 1,
    avatar: '„Éò',
    isOnline: false,
  },
  {
    id: '3',
    storeName: '„Ç§„Çø„É™„Ç¢„É≥„Éª„Éô„É©„É¥„Ç£„Çπ„Çø',
    lastMessage: 'ÊäïÁ®ø„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„ÅüÔºÅÁ¥†Êô¥„Çâ„Åó„ÅÑÂÜôÁúü„Åß„Åô„Å≠',
    timestamp: 'Êò®Êó•',
    unreadCount: 0,
    avatar: '„Ç§',
    isOnline: true,
  },
  {
    id: '4',
    storeName: '„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„Ç∏„É† POWER',
    lastMessage: 'ÊíÆÂΩ±„ÅäÁñ≤„ÇåÊßò„Åß„Åó„Åü„ÄÇÊù•Â∫óÊï∞„ÅåÂ¢ó„Åà„Å¶„ÅÑ„Åæ„ÅôÔºÅ',
    timestamp: '2Êó•Ââç',
    unreadCount: 1,
    avatar: '„Éï',
    isOnline: false,
  },
  {
    id: '5',
    storeName: '„Çπ„Ç§„Éº„ÉÑ„Ç´„Éï„Çß Sweet',
    lastMessage: 'Ê°à‰ª∂ÂÆå‰∫Ü„Åß„Åô„ÄÇ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„ÅüÔºÅ',
    timestamp: '1ÈÄ±ÈñìÂâç',
    unreadCount: 0,
    avatar: '„Çπ',
    isOnline: false,
  },
];

export default function MessagesPage() {
  const [searchQuery, setSearchQuery] = useState('');

  const filteredMessages = sampleMessages.filter(message =>
    message.storeName.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className="bg-white min-h-screen">
      {/* „Éò„ÉÉ„ÉÄ„Éº */}
      <header className="bg-white px-4 py-3 sticky top-0 z-40">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <Link href="/" className="text-smoky-navy hover:text-salmon-coral transition-colors">
              ‚Üê
            </Link>
            <h1 className="text-xl font-bold text-smoky-navy">„É°„ÉÉ„Çª„Éº„Ç∏</h1>
          </div>
          <button className="p-2 text-smoky-navy hover:text-salmon-coral transition-colors">
            <span className="text-xl">‚úèÔ∏è</span>
          </button>
        </div>
      </header>

      {/* Ê§úÁ¥¢„Éê„Éº */}
      <div className="px-4 py-3 bg-white">
        <div className="relative">
          <input
            type="text"
            placeholder="Ê§úÁ¥¢"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="w-full bg-gray-100 rounded-lg px-4 py-2 pl-10 text-sm focus:outline-none focus:ring-2 focus:ring-salmon-coral"
          />
          <span className="absolute left-3 top-2.5 text-gray-400 text-sm">üîç</span>
        </div>
      </div>

      {/* „É°„ÉÉ„Çª„Éº„Ç∏‰∏ÄË¶ß */}
      <div className="bg-light-greige">
        {filteredMessages.length > 0 ? (
          filteredMessages.map((message) => (
            <Link key={message.id} href={`/messages/${message.id}`}>
              <div className="bg-white p-4 hover:bg-gray-50 transition-colors border-b border-gray-100">
                <div className="flex items-center gap-3">
                  {/* „Ç¢„Éê„Çø„Éº */}
                  <div className="relative">
                    <div className="w-12 h-12 bg-salmon-coral rounded-full flex items-center justify-center text-white font-bold">
                      {message.avatar}
                    </div>
                    {message.isOnline && (
                      <div className="absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white"></div>
                    )}
                  </div>

                  {/* „É°„ÉÉ„Çª„Éº„Ç∏ÂÜÖÂÆπ */}
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center justify-between mb-1">
                      <h3 className="font-semibold text-smoky-navy truncate">{message.storeName}</h3>
                      <div className="flex items-center gap-2">
                        <span className="text-xs text-gray-500">{message.timestamp}</span>
                        {message.unreadCount > 0 && (
                          <div className="bg-salmon-coral text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                            {message.unreadCount > 9 ? '9+' : message.unreadCount}
                          </div>
                        )}
                      </div>
                    </div>
                    <p className="text-gray-600 text-sm truncate">
                      {message.unreadCount > 0 ? (
                        <span className="font-medium">{message.lastMessage}</span>
                      ) : (
                        message.lastMessage
                      )}
                    </p>
                  </div>
                </div>
              </div>
            </Link>
          ))
        ) : (
          <div className="flex flex-col items-center justify-center py-20 text-center">
            <span className="text-6xl mb-4">üí¨</span>
            <h3 className="text-lg font-medium text-smoky-navy mb-2">„É°„ÉÉ„Çª„Éº„Ç∏„Åå„ÅÇ„Çä„Åæ„Åõ„Çì</h3>
            <p className="text-gray-600 text-sm">Êñ∞„Åó„ÅÑ„É°„ÉÉ„Çª„Éº„Ç∏„ÅåÂ±ä„Åè„Å®„Åì„Åì„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô</p>
          </div>
        )}
      </div>
    </div>
  );
}
